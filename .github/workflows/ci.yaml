#
# Providence
# CI Workflow
#

name: Providence CI
on: push
env:
  CONTAINER_REGISTRY: ghcr.io
  PYTHON_VERSION: 3.10.6
jobs:
  simplygo-src:
    name: "SimplyGo Source: Lint, Build & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Lint
        run: make lint-simplygo
      - name: Build
        run: make build-simplygo
      - name: Test
        env:
          SIMPLYGO_SRC_USERNAME: "${{ secrets.SIMPLYGO_SRC_USERNAME }}"
          SIMPLYGO_SRC_PASSWORD: "${{ secrets.SIMPLYGO_SRC_PASSWORD }}"
          AWS_DEFAULT_REGION: "ap-southeast-1"
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: make test-simplygo

  rest-api-src:
    name: "REST API Source: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: rest-api
          python-version: "${{ env.PYTHON_VERSION }}"

  pandas-etl-transform:
    name: "Pandas ETL Transform: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: pandas-etl
          python-version: "${{ env.PYTHON_VERSION }}"

  pipelines:
    name: "Airflow Pipelines: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: pipelines
          python-version: "${{ env.PYTHON_VERSION }}"

  src-container:
    strategy:
      fail-fast: false
      matrix:
        source:
          - simplygo
          - rest-api
    name: "${{ matrix.source }} Source: Publish Container image"
    runs-on: ubuntu-22.04
    # add permissions needed to push containers to GHCR with GITHUB_TOKEN
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Build & Publish
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-${{ matrix.source }}-src"
          context_dir: "sources/${{ matrix.source }}"

  tfm-container:
    strategy:
      fail-fast: false
      matrix:
        transform:
          - pandas-etl
          - dbt
    name: "${{ matrix.transform }} Transform: Publish Container image"
    runs-on: ubuntu-22.04
    # add permissions needed to push containers to GHCR with GITHUB_TOKEN
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Build & Publish
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-${{ matrix.transform }}-tfm"
          context_dir: "transforms/${{ matrix.transform }}"

  e2e-test:
    needs:
      - src-container
      - tfm-container
    name: "End to End Test"
    runs-on: ubuntu-22.04
    env:
      KUBECONFIG: /tmp/kubeconfig.yaml
    steps:
    - uses: actions/checkout@v3
    - uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.11.1
    - uses: actions/setup-python@v4
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
    - name: Setup dependencies
      run: pip install -r tests/requirements.txt
    - name: Test
      working-directory: tests
      env:
        SIMPLYGO_SRC_USERNAME: "${{ secrets.SIMPLYGO_SRC_USERNAME }}"
        SIMPLYGO_SRC_PASSWORD: "${{ secrets.SIMPLYGO_SRC_PASSWORD }}"
        AWS_DEFAULT_REGION: "ap-southeast-1"
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        AWS_REDSHIFT_USER: "${{ secrets.AWS_REDSHIFT_USER }}"
        AWS_REDSHIFT_PASSWORD: "${{ secrets.AWS_REDSHIFT_PASSWORD }}"
        YNAB_SRC_ACCESS_TOKEN: "${{ secrets.YNAB_SRC_ACCESS_TOKEN }}"
      run: pytest
    - name: Export kind cluster logs
      if: always()
      run: kind export logs kind_logs
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: kind_logs
        path: kind_logs
