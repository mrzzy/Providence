#
# Providence
# CI Workflow
#

name: Providence CI
on:
  push:
    branches-ignore: 
    # temporary branches created by pipeline github Integration to run tasks on github actions
    - "workflow-*"
env:
  CONTAINER_REGISTRY: ghcr.io
  PYTHON_VERSION: 3.10.6
# add permissions needed to push containers to GHCR with GITHUB_TOKEN
permissions:
  contents: read
  packages: write
jobs:
  simplygo:
    name: "SimplyGo SDK"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "libs/simplygo -> target"
      - name: Lint
        run: make lint-simplygo
      - name: Build
        run: make build-simplygo
      - name: Test
        run: make test-simplygo
      - name: Publish
        if: ${{ github.event_name == 'release' }}
        run:
          cargo publish

  simplygo-src:
    name: "SimplyGo Source"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "sources/simplygo -> target"
      - name: Lint
        run: make lint-simplygo-src
      - name: Build
        run: make build-simplygo-src
      - name: Test
        env:
          SIMPLYGO_SRC_USERNAME: "${{ secrets.SIMPLYGO_SRC_USERNAME }}"
          SIMPLYGO_SRC_PASSWORD: "${{ secrets.SIMPLYGO_SRC_PASSWORD }}"
        run: make test-simplygo-src
      - name: Publish Container
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-simplygo-src"
          context_dir: "sources/simplygo"
          dockerfile: "infra/Dockerfile.simplygo_rust"
          build_args: |
            TARGET=simplygo_src

  simplygo-tfm:
    name: "SimplyGo Transform"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "transforms/simplygo -> target"
      - name: Lint
        run: make lint-simplygo-tfm
      - name: Build
        run: make build-simplygo-tfm
      - name: Test
        run: make test-simplygo-tfm
      - name: Publish Container
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-simplygo-tfm"
          context_dir: "transforms/simplygo"
          dockerfile: "infra/Dockerfile.simplygo_rust"
          build_args: |
            TARGET=simplygo_tfm

  rest-api-src:
    name: "REST API Source: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: rest-api
          python-version: "${{ env.PYTHON_VERSION }}"

  pandas-etl-transform:
    name: "Pandas ETL Transform: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: pandas-etl
          python-version: "${{ env.PYTHON_VERSION }}"

  dbt-transform:
    name: "DBT Transform: Lint"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Setup dependencies
        run: make deps-dbt
      - name: Lint
        run: make lint-dbt

  dbt-docs:
    name: "DBT Docs"
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Setup dependencies
        run: make deps-dbt
      - name: Generate docs
        env:
          DBT_TARGET: prod
        working-directory: transforms/dbt
        run: |
          set -ex -o pipefail
          # generate docs into 'target' dir
          dbt docs generate
          # create 'docs' dir containing only the files needed for dbt docs
          mkdir docs
          cp target/{index.html,manifest.json,catalog.json} -t docs
      - name: Publish docs
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: transforms/dbt/docs
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          full_commit_message: "doc(transform): update dbt docs for ${{ github.sha }}"

  ynab-sink:
    name: "YNAB Sink: Lint, Build & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup dependencies
        run: make deps-ynab
      - name: Lint
        run: make lint-ynab
      - name: Build
        run: make build-ynab
      - name: Test
        run: make test-ynab

  pipelines:
    name: "Airflow Pipelines: Lint & Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/python
        with:
          make-suffix: pipelines
          python-version: "${{ env.PYTHON_VERSION }}"

  src-container:
    strategy:
      fail-fast: false
      matrix:
        source:
          - simplygo
          - rest-api
    name: "${{ matrix.source }} Source: Publish Container image"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build & Publish
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-${{ matrix.source }}-src"
          context_dir: "sources/${{ matrix.source }}"

  tfm-container:
    strategy:
      fail-fast: false
      matrix:
        transform:
          - pandas-etl
          - dbt
    name: "${{ matrix.transform }} Transform: Publish Container image"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build & Publish
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-${{ matrix.transform }}-tfm"
          context_dir: "transforms/${{ matrix.transform }}"

  sink-container:
    strategy:
      fail-fast: false
      matrix:
        sink:
          - ynab
    name: "${{ matrix.sink }} Sink: Publish Container image"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build & Publish
        uses: ./.github/actions/ghcr
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          name: "pvd-${{ matrix.sink }}-sink"
          context_dir: "sinks/${{ matrix.sink }}"

  e2e-test:
    needs:
      - src-container
      - tfm-container
      - sink-container
    name: "End to End Test"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Setup dependencies
        run: pip install -r tests/requirements.txt
      - name: Test
        working-directory: tests
        env:
          SIMPLYGO_SRC_USERNAME: "${{ secrets.SIMPLYGO_SRC_USERNAME }}"
          SIMPLYGO_SRC_PASSWORD: "${{ secrets.SIMPLYGO_SRC_PASSWORD }}"
          YNAB_ACCESS_TOKEN: "${{ secrets.YNAB_ACCESS_TOKEN }}"
        run: pytest -vvv
