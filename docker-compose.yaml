#
# Providence
# Docker Compose
#

services:
  # Standalone Airflow for Development
  airflow:
    image: apache/airflow:2.5.3rc2-python3.10
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: "False"
      # user env vars from .env automatically loaded by compose to define
      # Airflow connections expected by Airflow DAGs. NOTE: These Airflow
      # connections would not appear in the Airflow UI as they are not stored in the DB.
      AIRFLOW_CONN_AWS_DEFAULT: |
        {
            "conn_type": "aws",
            "login": "${AWS_ACCESS_KEY_ID}",
            "password": "${AWS_SECRET_ACCESS_KEY}",
            "extra": {
              "region_name": "${AWS_DEFAULT_REGION}"
            }
        }
      AIRFLOW_CONN_PVD_SIMPLYGO_SRC: |
        {
            "conn_type": "generic",
            "login": "${SIMPLYGO_SRC_USERNAME}",
            "password": "${SIMPLYGO_SRC_PASSWORD}"
        }
      AIRFLOW_CONN_PVD_YNAB_SRC: |
        {
            "conn_type": "generic",
            "password": "${YNAB_SRC_ACCESS_TOKEN}"
        }
      AIRFLOW_CONN_REDSHIFT_DEFAULT: |
        {
          "conn_type": "redshift",
          "host": "main.132307318913.ap-southeast-1.redshift-serverless.amazonaws.com",
          "port": 5439,
          "login": "${AWS_REDSHIFT_USER}",
          "password": "${AWS_REDSHIFT_PASSWORD}",
          "schema": "dev",
          "extra": {
            "role_arn": "arn:aws:iam::132307318913:role/warehouse"
          }
        }
      # expects an accessible kubernetes cluster via passed $KUBECONFIG
      KUBECONFIG: /kubeconfig.yaml
    network_mode: host
    volumes:
      - "${KUBECONFIG}:/kubeconfig.yaml"
      - ./pipelines:/opt/airflow/dags
    command: ["airflow", "standalone"]
    expose:
      - 8080
